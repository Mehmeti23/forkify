{"id":"node_modules/core-js/internals/array-sort.js","dependencies":[{"name":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\package.json","includedInParent":true,"mtime":1725916312589},{"name":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1725916301258},{"name":"../internals/array-slice","loc":{"line":2,"column":25,"index":39},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\array-sort.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\array-slice.js"}],"generated":{"js":"'use strict';\nvar arraySlice = require('../internals/array-slice');\n\nvar floor = Math.floor;\n\nvar sort = function (array, comparefn) {\n  var length = array.length;\n\n  if (length < 8) {\n    // insertion sort\n    var i = 1;\n    var element, j;\n\n    while (i < length) {\n      j = i;\n      element = array[i];\n      while (j && comparefn(array[j - 1], element) > 0) {\n        array[j] = array[--j];\n      }\n      if (j !== i++) array[j] = element;\n    }\n  } else {\n    // merge sort\n    var middle = floor(length / 2);\n    var left = sort(arraySlice(array, 0, middle), comparefn);\n    var right = sort(arraySlice(array, middle), comparefn);\n    var llength = left.length;\n    var rlength = right.length;\n    var lindex = 0;\n    var rindex = 0;\n\n    while (lindex < llength || rindex < rlength) {\n      array[lindex + rindex] = (lindex < llength && rindex < rlength)\n        ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n        : lindex < llength ? left[lindex++] : right[rindex++];\n    }\n  }\n\n  return array;\n};\n\nmodule.exports = sort;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/core-js/internals/array-sort.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/core-js/internals/array-sort.js":"'use strict';\nvar arraySlice = require('../internals/array-slice');\n\nvar floor = Math.floor;\n\nvar sort = function (array, comparefn) {\n  var length = array.length;\n\n  if (length < 8) {\n    // insertion sort\n    var i = 1;\n    var element, j;\n\n    while (i < length) {\n      j = i;\n      element = array[i];\n      while (j && comparefn(array[j - 1], element) > 0) {\n        array[j] = array[--j];\n      }\n      if (j !== i++) array[j] = element;\n    }\n  } else {\n    // merge sort\n    var middle = floor(length / 2);\n    var left = sort(arraySlice(array, 0, middle), comparefn);\n    var right = sort(arraySlice(array, middle), comparefn);\n    var llength = left.length;\n    var rlength = right.length;\n    var lindex = 0;\n    var rindex = 0;\n\n    while (lindex < llength || rindex < rlength) {\n      array[lindex + rindex] = (lindex < llength && rindex < rlength)\n        ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n        : lindex < llength ? left[lindex++] : right[rindex++];\n    }\n  }\n\n  return array;\n};\n\nmodule.exports = sort;\n"},"lineCount":43}},"error":null,"hash":"f05bd528401e2d84ae7d9026a1e4ee72","cacheData":{"env":{}}}