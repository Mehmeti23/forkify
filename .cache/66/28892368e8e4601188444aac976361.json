{"id":"node_modules/core-js/internals/normalize-string-argument.js","dependencies":[{"name":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\package.json","includedInParent":true,"mtime":1725916312589},{"name":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1725916301258},{"name":"../internals/to-string","loc":{"line":2,"column":23,"index":37},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\normalize-string-argument.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\to-string.js"}],"generated":{"js":"'use strict';\nvar toString = require('../internals/to-string');\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/normalize-string-argument.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/normalize-string-argument.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/normalize-string-argument.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/normalize-string-argument.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/normalize-string-argument.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/normalize-string-argument.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/normalize-string-argument.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}}],"sources":{"node_modules/core-js/internals/normalize-string-argument.js":"'use strict';\nvar toString = require('../internals/to-string');\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n"},"lineCount":7}},"error":null,"hash":"402e2f12148fcfa67a2b23a6741799d5","cacheData":{"env":{}}}