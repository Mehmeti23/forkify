{"id":"node_modules/core-js/modules/es.string.split.js","dependencies":[{"name":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\package.json","includedInParent":true,"mtime":1725916312589},{"name":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1725916301258},{"name":"../internals/function-call","loc":{"line":2,"column":19,"index":33},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\function-call.js"},{"name":"../internals/function-uncurry-this","loc":{"line":3,"column":26,"index":90},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/fix-regexp-well-known-symbol-logic","loc":{"line":4,"column":44,"index":173},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js"},{"name":"../internals/an-object","loc":{"line":5,"column":23,"index":248},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\an-object.js"},{"name":"../internals/is-null-or-undefined","loc":{"line":6,"column":32,"index":307},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\is-null-or-undefined.js"},{"name":"../internals/require-object-coercible","loc":{"line":7,"column":37,"index":382},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\require-object-coercible.js"},{"name":"../internals/species-constructor","loc":{"line":8,"column":33,"index":457},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\species-constructor.js"},{"name":"../internals/advance-string-index","loc":{"line":9,"column":33,"index":527},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\advance-string-index.js"},{"name":"../internals/to-length","loc":{"line":10,"column":23,"index":588},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\to-length.js"},{"name":"../internals/to-string","loc":{"line":11,"column":23,"index":638},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/get-method","loc":{"line":12,"column":24,"index":689},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\get-method.js"},{"name":"../internals/regexp-exec-abstract","loc":{"line":13,"column":25,"index":742},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\regexp-exec-abstract.js"},{"name":"../internals/regexp-sticky-helpers","loc":{"line":14,"column":28,"index":808},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\regexp-sticky-helpers.js"},{"name":"../internals/fails","loc":{"line":15,"column":20,"index":867},"parent":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\modules\\es.string.split.js","resolved":"C:\\Users\\mehak\\Desktop\\18-forkify\\final\\node_modules\\core-js\\internals\\fails.js"}],"generated":{"js":"'use strict';\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar MAX_UINT32 = 0xFFFFFFFF;\nvar min = Math.min;\nvar push = uncurryThis([].push);\nvar stringSlice = uncurryThis(''.slice);\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nvar BUGGY = 'abbc'.split(/(b)*/)[1] === 'c' ||\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  'test'.split(/(?:)/, -1).length !== 4 ||\n  'ab'.split(/(?:ab)*/).length !== 2 ||\n  '.'.split(/(.?)(.?)/).length !== 4 ||\n  // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n  '.'.split(/()()/).length > 1 ||\n  ''.split(/.?/).length;\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit = '0'.split(undefined, 0).length ? function (separator, limit) {\n    return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);\n  } : nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = isNullOrUndefined(separator) ? undefined : getMethod(separator, SPLIT);\n      return splitter\n        ? call(splitter, separator, O, limit)\n        : call(internalSplit, toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (!BUGGY) {\n        var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n        if (res.done) return res.value;\n      }\n\n      var C = speciesConstructor(rx, RegExp);\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return regExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = regExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          push(A, stringSlice(S, p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            push(A, z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      push(A, stringSlice(S, p));\n      return A;\n    }\n  ];\n}, BUGGY || !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/core-js/modules/es.string.split.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}}],"sources":{"node_modules/core-js/modules/es.string.split.js":"'use strict';\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar MAX_UINT32 = 0xFFFFFFFF;\nvar min = Math.min;\nvar push = uncurryThis([].push);\nvar stringSlice = uncurryThis(''.slice);\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nvar BUGGY = 'abbc'.split(/(b)*/)[1] === 'c' ||\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  'test'.split(/(?:)/, -1).length !== 4 ||\n  'ab'.split(/(?:ab)*/).length !== 2 ||\n  '.'.split(/(.?)(.?)/).length !== 4 ||\n  // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n  '.'.split(/()()/).length > 1 ||\n  ''.split(/.?/).length;\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit = '0'.split(undefined, 0).length ? function (separator, limit) {\n    return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);\n  } : nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = isNullOrUndefined(separator) ? undefined : getMethod(separator, SPLIT);\n      return splitter\n        ? call(splitter, separator, O, limit)\n        : call(internalSplit, toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (!BUGGY) {\n        var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n        if (res.done) return res.value;\n      }\n\n      var C = speciesConstructor(rx, RegExp);\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return regExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = regExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          push(A, stringSlice(S, p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            push(A, z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      push(A, stringSlice(S, p));\n      return A;\n    }\n  ];\n}, BUGGY || !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n"},"lineCount":112}},"error":null,"hash":"af0e92935cdf15fd9b4c07e50b683ed6","cacheData":{"env":{}}}